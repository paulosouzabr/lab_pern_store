pipeline {
    agent {
        kubernetes {
            yaml '''
                apiVersion: v1
                kind: Pod
                spec:
                  containers:
                  - name: docker
                    image: docker:20.10.16-dind
                    securityContext:
                      privileged: true
                  - name: helm
                    image: alpine/helm:3.9.0
                    command:
                    - cat
                    tty: true
                  - name: kubectl
                    image: bitnami/kubectl:1.24
                    command:
                    - cat
                    tty: true
                  - name: sonar-scanner
                    image: sonarsource/sonar-scanner-cli:latest
                    command:
                    - cat
                    tty: true
            '''
        }
    }
    
    environment {
        DOCKER_REGISTRY = 'your-registry'
        DOCKER_CREDS = credentials('docker-credentials')
        GITHUB_CREDS = credentials('github-credentials')
        SONAR_TOKEN = credentials('sonar-token')
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main',
                    url: 'https://github.com/paulosouzabr/pern-store.git',
                    credentialsId: 'github-credentials'
            }
        }

        stage('Build Backend') {
            steps {
                container('docker') {
                    dir('app/backend/server') {
                        sh '''
                        docker build -t ${DOCKER_REGISTRY}/pern-store-backend:${BUILD_NUMBER} .
                        docker login -u ${DOCKER_CREDS_USR} -p ${DOCKER_CREDS_PSW}
                        docker push ${DOCKER_REGISTRY}/pern-store-backend:${BUILD_NUMBER}
                        '''
                    }
                }
            }
        }

        stage('Build Frontend') {
            steps {
                container('docker') {
                    dir('app/frontend') {
                        sh '''
                        docker build -t ${DOCKER_REGISTRY}/pern-store-frontend:${BUILD_NUMBER} .
                        docker push ${DOCKER_REGISTRY}/pern-store-frontend:${BUILD_NUMBER}
                        '''
                    }
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                container('sonar-scanner') {
                    sh '''
                    sonar-scanner \
                        -Dsonar.projectKey=pern-store \
                        -Dsonar.sources=. \
                        -Dsonar.host.url=http://sonarqube-server:9000 \
                        -Dsonar.login=${SONAR_TOKEN}
                    '''
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                container('helm') {
                    sh '''
                    helm upgrade --install pern-store ./infra/k8s/helm-charts/pern-store \
                        --set backend.image.tag=${BUILD_NUMBER} \
                        --set frontend.image.tag=${BUILD_NUMBER} \
                        --namespace pern-store \
                        --create-namespace
                    '''
                }
            }
        }
    }
}