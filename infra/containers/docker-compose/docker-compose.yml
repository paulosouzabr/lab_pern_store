services:
  backend:
    image: backend-server
    hostname: store-backend-server
    container_name: store-backend-server
    build:
      context: ../../../app/backend/server
      dockerfile: Dockerfile
    # restart: always
    env_file:
      - ../../../app/backend/server/.env
    environment:
      - POSTGRES_HOST=store-db-server
      - POSTGRES_DB=store
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=changeme
    volumes:
      - ../../../app/backend/server:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 9000:9000
    networks:
      - store_network
    depends_on:
      - database

  frontend:
    image: store-frontend-server
    hostname: store-frontend-server
    container_name: store-frontend-server
    restart: unless-stopped
    env_file:
      - ../../../app/frontend/.env
    build:
      context: ../../../app/frontend/
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    volumes:
      - ../../../app/frontend/:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - backend
    networks:
      - store_network

  database:
    hostname: store-db-server
    container_name: store-db-server
    image: postgres
    restart: always
    env_file:
      - ../../../app/backend/server/.env
    environment:
      - POSTGRES_PASSWORD=changeme
      - POSTGRES_USER=postgres
      - POSTGRES_DB=store
    ports:
      - 5432:5432
    volumes:
      - db:/var/lib/postgresql/data
      - ../../../app/backend/server/config/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
    - store_network

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@mail.com"
      PGADMIN_DEFAULT_PASSWORD: "changeme"
    ports:
      - "16543:80"
    depends_on:
      - database
    networks:
    - store_network

networks:
  store_network:
    driver: bridge
volumes:
  db:
    driver: local
